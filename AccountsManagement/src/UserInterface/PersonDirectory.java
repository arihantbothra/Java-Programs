/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Business;
import Business.PersonAccountDirectory;
import Business.PersonList;
import Business.UserAccount;
import Business.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bothr
 */
public class PersonDirectory extends javax.swing.JPanel {

    /**
     * Creates new form PersonAccountDirectory
     */
    JPanel panel;
    Business business;
    public PersonDirectory(JPanel panel, Business business) {
        initComponents();
        this.panel = panel;
        this.business = business;
        populate();
    }
    public void populate(){
        DefaultTableModel dtm = (DefaultTableModel)persontable.getModel();
        dtm.setRowCount(0);
        for(PersonList pl : business.getPd().getPerson()){
            Object [] row = new Object[4];
            row[0] = pl.getFirstname();
            row[1] = pl.getLastname();
            row[2] = pl.getUsername();
            row[3] = pl.getStatus();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        persontable = new javax.swing.JTable();
        findperson = new javax.swing.JButton();
        newperson = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        persontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "User Name", "Status"
            }
        ));
        jScrollPane1.setViewportView(persontable);

        findperson.setText("Find Person");
        findperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findpersonActionPerformed(evt);
            }
        });

        newperson.setText("New Person");
        newperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newpersonActionPerformed(evt);
            }
        });

        update.setText("Update Person");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Person Directory");

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(findperson, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newperson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newperson)
                    .addComponent(findperson)
                    .addComponent(delete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(refresh))
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void findpersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findpersonActionPerformed
        String name = JOptionPane.showInputDialog("Enter Person's name");
        DefaultTableModel dtm = (DefaultTableModel)persontable.getModel();
        dtm.setRowCount(0);
        for(PersonList pl : business.getPd().getPerson()){
            if(pl.getFirstname().toString().equals(name)){
                
                Object [] row = new Object[3];
                row[0] = pl.getFirstname();
                row[1] = pl.getLastname();
                row[2] = pl.getUsername();
                
                dtm.addRow(row);
            }
        }
    }//GEN-LAST:event_findpersonActionPerformed

    private void newpersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newpersonActionPerformed
        NewPerson np = new NewPerson(panel, business);
        panel.add("NewPerson", np);
        CardLayout layout = (CardLayout)panel.getLayout();
        layout.next(panel);
    }//GEN-LAST:event_newpersonActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int i = persontable.getSelectedRow();
        try{

            String user = persontable.getValueAt(i, 2).toString();
            for(UserAccount ua : business.getUa().getUseraccount()){
                if(ua.getUserName().equals(user)){
                    if(ua.getRole().equals("System Admin")){
                        JOptionPane.showMessageDialog(null, "Access Denied");
                    }
                    else{
                        UpdatePersonAccount updateperson = new UpdatePersonAccount(panel, business, user);
                        panel.add("UpdatePersonAccount", updateperson);
                        CardLayout layout = (CardLayout)panel.getLayout();
                        layout.next(panel);
                    }
                }

            }
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_updateActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        populate();
    }//GEN-LAST:event_refreshActionPerformed
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try{
            int row = persontable.getSelectedRow();
            String user = persontable.getValueAt(row, 2).toString();
            for(UserAccount ua : business.getUa().getUseraccount()){
                business.getPd().deletedata(row);
                if(ua.getUserName()!= null)
                    business.getUa().deleterecord(user);
                populate();
            }
        }catch(Exception e){

        }
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton findperson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newperson;
    private javax.swing.JTable persontable;
    private javax.swing.JButton refresh;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
