/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Doctor;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ITDepartmentOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import static com.sun.org.apache.regexp.internal.RETest.test;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static jdk.nashorn.internal.objects.NativeRegExp.test;
import Business.*;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arihant
 */
public class BloodReportTestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel1
     */
    private Enterprise enterprise;
    private UserAccount userAccount, employee;
    private JPanel userProcessContainer;
    private Organization organization, orgg;
    private EcoSystem business;
    // private Enterprise enterprise;
    List<String[]> prescription = new ArrayList<>();
    double blood, urine, hairr, proxy;
    String final_rep = null;
    

    public BloodReportTestJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization org, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        
        this.userAccount = userAccount;
        this.business = business;
        this.enterprise = enterprise;
        this.organization = org;//To change body of generated methods, choose Tools | Templates.
//        PopulatePrescriptionTable();
        PopulateTable();
        addprescription();
    }

    public void addprescription(){
        String[] med = {"Atorvastatin Calcium", "Levothyroxine", "Lisinopril", 
                        "Omeprazole", "Metformin", "Amlodipine", "Simvastatin", 
                        "Hydrocodone", "Acetaminophen"};
        prescription.add(med);
        
    }
    

    public void PopulateTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequest.getModel();
        DefaultTableModel model1 = (DefaultTableModel) tblPrescription.getModel();
        model.setRowCount(0);
        model1.setRowCount(0);
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
        for(Test test : organization.getTestList().getTest_list()){
            if(test.getStatus().equalsIgnoreCase("completed")){
                continue;
            }
            else{
//                req = request;
                Object[] row = new Object[3];
                row[0] = test.getOrganization();
                row[1] = test.getEmployee();
                row[2] = test.getStatus();
                model.addRow(row);   
            }
        }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bloodtestreport = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        urinetestreport = new javax.swing.JTextField();
        hair = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        prox = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        showreport = new javax.swing.JButton();
        btnScreeningTest = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPrescription = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        result = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText(" Test Report");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 250, -1));

        jLabel3.setText("Blood Test Report");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        bloodtestreport.setEnabled(false);
        bloodtestreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodtestreportActionPerformed(evt);
            }
        });
        add(bloodtestreport, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 150, -1));

        jLabel4.setText("Urine Test Report");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        urinetestreport.setEnabled(false);
        add(urinetestreport, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 150, -1));

        hair.setEnabled(false);
        add(hair, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 150, -1));

        jLabel6.setText("Hair test Report");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));

        jLabel7.setText("Propxyphene");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        prox.setEnabled(false);
        add(prox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 150, -1));

        jButton1.setText("FWD Report to Employee");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 570, 179, -1));

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization", "Employee", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 680, 89));

        showreport.setText("Report");
        showreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showreportActionPerformed(evt);
            }
        });
        add(showreport, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        btnScreeningTest.setText(" Start Screening Test");
        btnScreeningTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScreeningTestActionPerformed(evt);
            }
        });
        add(btnScreeningTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 160, -1));

        tblPrescription.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization", "Employee", "Result", "Prescription1", "Prescription2"
            }
        ));
        jScrollPane3.setViewportView(tblPrescription);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 680, 90));

        jLabel2.setText("Result");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));
        add(result, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 384, 150, 30));

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            for(Test test : organization.getTestList().getTest_list()){
                if(test.getStatus().equals("Completed")){
                    if(test.getEmp_status().equals("TestDone"))
                        test.setEmp_status("Sent");
                }
            }
        }
        PopulateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bloodtestreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodtestreportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodtestreportActionPerformed

    private void btnScreeningTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScreeningTestActionPerformed
//        request.setStatus("Processing");

        int selectedRow = tblRequest.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        orgg = (Organization) tblRequest.getValueAt(selectedRow, 0);
        employee = (UserAccount) tblRequest.getValueAt(selectedRow, 1);
        
        bloodtestreport.setEnabled(true);
        urinetestreport.setEnabled(true);
        hair.setEnabled(true);
        prox.setEnabled(true);
        
        double rangeMin = 0;
        double rangeMax = 100;
        Random r = new Random();
        double a = (rangeMin + (rangeMax - rangeMin) * r.nextDouble()) * 100;
        double b = (rangeMin + (rangeMax - rangeMin) * r.nextDouble()) * 100;
        double c = (rangeMin + (rangeMax - rangeMin) * r.nextDouble()) * 100;
        double d = (rangeMin + (rangeMax - rangeMin) * r.nextDouble()) * 100;

        blood = (Math.round(a))/100;
        urine = (Math.round(b))/100;
        hairr = (Math.round(c))/100;
        proxy = (Math.round(d))/100;
        
        bloodtestreport.setText(Double.toString(blood));
        urinetestreport.setText(Double.toString(urine));
        hair.setText(Double.toString(hairr));
        prox.setText(Double.toString(proxy));
        bloodtestreport.setEditable(false);
        urinetestreport.setEditable(false);
        hair.setEditable(false);
        prox.setEditable(false);
        
        if(blood > 2){
            if(hairr > 4){
                if(urine > 9.5){
                    if(proxy > 3.86){
                        System.out.println("positive");
                        final_rep = "Positive";
                        result.setText(final_rep);
                        
                    }
                }
            }
        }
        else{
            System.out.println("negative");
            final_rep = "Negative";
            result.setText(final_rep);
        }
        submit();
// TODO add your handling code here:
    }//GEN-LAST:event_btnScreeningTestActionPerformed

    public void submit(){
        String pres1 = null; 
        String pres2 = null;
        if (final_rep.equals("Positive")) {
            System.out.println("posi");
            Random random = new Random();
            for(String[] currentArray : prescription){
                System.out.println("pres");
                pres1 = currentArray[random.nextInt(currentArray.length)];
                pres2 = currentArray[random.nextInt(currentArray.length)];
            }
            for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                for(Test test : organization.getTestList().getTest_list()){
                    System.out.println("1");
                    if(test.getOrganization() == orgg){
                        System.out.println("2");
                        if(test.getEmployee() == employee){
                            System.out.println("3");
                            test.setBlood_test(blood);
                            test.setUrine_test(urine);
                            test.setHair_test(hairr);
                            test.setProxyphene(proxy);
                            test.setPriscription1(pres1);
                            test.setPriscription2(pres2);
                            test.setResult_test("Positive");
                            test.setEmp_status("TestDone");
                            test.setStatus("completed");
                        }
                    }
                }
            }
        }
        else{
            for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                for(Test test : organization.getTestList().getTest_list()){
                    if(test.getOrganization() == orgg){
                        if(test.getEmployee() == employee){
                            test.setBlood_test(blood);
                            test.setUrine_test(urine);
                            test.setHair_test(hairr);
                            test.setProxyphene(proxy);
                            test.setResult_test("Negative");
                            test.setPriscription1("Not Required");
                            test.setPriscription2("Not Required");
                            test.setEmp_status("TestDone");
                            test.setStatus("completed");

                        }
                    }
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "Done Successfully");
        PopulateTable();
    }    
    private void showreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showreportActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPrescription.getModel();
        model.setRowCount(0);
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
        for(Test test : organization.getTestList().getTest_list()){
            if(test.getStatus().equalsIgnoreCase("Completed")){
                    if(!test.getEmp_status().equalsIgnoreCase("Sent")){
                    Object[] row = new Object[5];
                    row[0] = test.getOrganization();
                    row[1] = test.getEmployee();
                    row[2] = test.getResult_test();
                    row[3] = test.getPriscription1();
                    row[4] = test.getPriscription2();
                    model.addRow(row);   
                }
            }
        }
        }
    }//GEN-LAST:event_showreportActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PopulateTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bloodtestreport;
    private javax.swing.JButton btnScreeningTest;
    private javax.swing.JTextField hair;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField prox;
    private javax.swing.JLabel result;
    private javax.swing.JButton showreport;
    private javax.swing.JTable tblPrescription;
    private javax.swing.JTable tblRequest;
    private javax.swing.JTextField urinetestreport;
    // End of variables declaration//GEN-END:variables
}
