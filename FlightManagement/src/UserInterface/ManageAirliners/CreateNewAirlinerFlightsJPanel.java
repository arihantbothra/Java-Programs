/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliners;

import Business.Agent;
import Business.Airline;
import Business.Airline_Access;
import java.awt.CardLayout;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arihant
 */

public class CreateNewAirlinerFlightsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewAirlinearJPanel
     */
    public JPanel panel;
    private Agent agent;
    private ManageAirlinersJPanel manage;
    public CreateNewAirlinerFlightsJPanel(JPanel panel, Agent agent) {
        initComponents();
        this.panel = panel;
        this.agent = agent;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serial_no = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        source = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        airliner = new javax.swing.JTextField();
        max = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        serialNoLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        destination = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        update = new javax.swing.JButton();
        serialNoLabel1 = new javax.swing.JLabel();
        model_no = new javax.swing.JTextField();
        window = new javax.swing.JTextField();
        middle = new javax.swing.JTextField();
        aisle = new javax.swing.JTextField();
        window_cost = new javax.swing.JTextField();
        middle_cost = new javax.swing.JTextField();
        aisle_cost = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        serialNoLabel2 = new javax.swing.JLabel();
        serialNoLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        dateLabel1 = new javax.swing.JLabel();

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Add Content");

        jLabel11.setText("To");

        jLabel8.setText("Airliner");

        serialNoLabel.setText("Serial No.");

        jLabel9.setText("Maximum Seats");

        timeLabel.setText("Time");

        jLabel10.setText("From");

        cancel.setText("Back");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        serialNoLabel1.setText("Model No.");

        jLabel12.setText("Window");

        serialNoLabel2.setText("Middle");

        serialNoLabel3.setText("Aisle");

        jLabel13.setText("Window_Cost");

        jLabel14.setText("Middle_Cost");

        dateLabel1.setText("Aisle_Cost");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serialNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serialNoLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(model_no)
                            .addComponent(serial_no, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(airliner, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(max, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(serialNoLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(serialNoLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dateLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(aisle)
                                    .addComponent(middle, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(window, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(window_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(middle_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aisle_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancel))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel1)))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serial_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(model_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add)
                            .addComponent(update)
                            .addComponent(cancel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(window, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(middle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNoLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aisle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(window_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(middle_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aisle_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(507, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    String airline;
    public void setData(String air){
        this.airline = air;
        airliner.setText(airline);
        airliner.setEditable(false);
    }
    
    int serialno;
    public void setSerial(int ser){
        this.serialno = ser;
        serial_no.setText(Integer.toString(serialno));
        serial_no.setEditable(false);
        add.setVisible(false);
    }
    
    
    public void view(){
        add.setVisible(false);
        update.setVisible(false);
        airliner.setEditable(false);
        serial_no.setEditable(false);
        model_no.setEditable(false);
        destination.setEditable(false);
        source.setEditable(false);
        time.setEditable(false);
        max.setEditable(false);
        window.setEditable(false);
        middle.setEditable(false);
        aisle.setEditable(false);
        window_cost.setEditable(false);
        middle_cost.setEditable(false);
        aisle_cost.setEditable(false);
    }
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String air = airliner.getText();
        String sno = serial_no.getText();
        String mno = model_no.getText();
        String to = destination.getText();
        String from = source.getText();
        String tym = time.getText();
        String maxs = max.getText();
        String win = window.getText();
        String mid = middle.getText();
        String ais = aisle.getText();
        String winc = window_cost.getText();
        String midc = middle_cost.getText();
        String aisc = aisle_cost.getText();       
      
        
        Object row[] = new Object[12];
        execute:
        if(air.isEmpty() || sno.isEmpty() || mno.isEmpty() || to.isEmpty() || from.isEmpty() || tym.isEmpty() || maxs.isEmpty() || win.isEmpty() || mid.isEmpty() || ais.isEmpty() || winc.isEmpty() || midc.isEmpty() || aisc.isEmpty()){
                JOptionPane.showMessageDialog(null, "You cannot leave any field blank");
                
        }
        
        else{
            
            try{
                row[0]= Integer.parseInt(sno);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Serial Number should be a number");
                break execute;
            }

            row[1] = mno;
            row[2] = to;
            row[3] = from;
            row[4] = tym;
            
            try{
                row[5]= Integer.parseInt(maxs);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Seat Capacity should be a number");
                break execute;
            }
            try{
                row[6]= Integer.parseInt(win);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Window Capacity should be a number");
                break execute;
            }
            try{
                row[7]= Integer.parseInt(mid);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Middle Capacity should be a number");
                break execute;
            }
            try{
                row[8]= Integer.parseInt(ais);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Aisle Capacity should be a number");
                break execute;
            }
            try{
                row[9]= Integer.parseInt(winc);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Window Cost should be a number");
                break execute;
            }
            try{
                row[10]= Integer.parseInt(midc);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Middle Cost should be a number");
                break execute;
            }
            try{
                row[11]= Integer.parseInt(aisc);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Aisle Cost should be a number");
                break execute;
            }
            if((Integer.valueOf(win) + Integer.valueOf(mid) + Integer.valueOf(ais) ) > Integer.valueOf(maxs)){
                JOptionPane.showMessageDialog(null, "Check the seat Countings");
            }
            else{
                Airline airplane = agent.addairplane();
                airplane.setSerialNo(Integer.parseInt(sno));
                airplane.setAirline(air);
                airplane.setSource(from);
                airplane.setDestination(to);
                airplane.setModelNo(mno);
                airplane.setTotal_seats(Integer.parseInt(maxs));
                airplane.setWindow(Integer.parseInt(win));
                airplane.setMiddle(Integer.parseInt(mid));
                airplane.setAisle(Integer.parseInt(ais));
                airplane.setWin_cost(Integer.parseInt(winc));
                airplane.setMid_cost(Integer.parseInt(midc));
                airplane.setAis_cost(Integer.parseInt(aisc));
                airplane.setTime(tym);

                JOptionPane.showMessageDialog(null, "Added Successfully.");
            }
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        
        String air = airliner.getText();
        String sno = serial_no.getText();
        String mno = model_no.getText();
        String to = destination.getText();
        String from = source.getText();
        String tym = time.getText();
        String maxs = max.getText();
        String win = window.getText();
        String mid = middle.getText();
        String ais = aisle.getText();
        String winc = window_cost.getText();
        String midc = middle_cost.getText();
        String aisc = aisle_cost.getText();
        Object row[] = new Object[12];
        execute:
        if(air.isEmpty() || sno.isEmpty() || mno.isEmpty() || to.isEmpty() || from.isEmpty() || tym.isEmpty() || maxs.isEmpty() || win.isEmpty() || mid.isEmpty() || ais.isEmpty() || winc.isEmpty() || midc.isEmpty() || aisc.isEmpty()){
                JOptionPane.showMessageDialog(null, "You cannot leave any field blank");
                
        }
        
        else{
            
            try{
                row[0]= Integer.parseInt(sno);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Serial Number should be a number");
                break execute;
            }

            row[1] = mno;
            row[2] = to;
            row[3] = from;
            row[4] = tym;
            
            try{
                row[5]= Integer.parseInt(maxs);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Seat Capacity should be a number");
                break execute;
            }
            try{
                row[6]= Integer.parseInt(win);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Window Capacity should be a number");
                break execute;
            }
            try{
                row[7]= Integer.parseInt(mid);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Middle Capacity should be a number");
                break execute;
            }
            try{
                row[8]= Integer.parseInt(ais);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Aisle Capacity should be a number");
                break execute;
            }
            try{
                row[9]= Integer.parseInt(winc);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Window Cost should be a number");
                break execute;
            }
            try{
                row[10]= Integer.parseInt(midc);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Middle Cost should be a number");
                break execute;
            }
            try{
                row[11]= Integer.parseInt(aisc);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Aisle Cost should be a number");
                break execute;
            }
            if((Integer.valueOf(win) + Integer.valueOf(mid) + Integer.valueOf(ais) ) > Integer.valueOf(maxs)){
                JOptionPane.showMessageDialog(null, "Check the seat Countings");
            }
            else{
                for(Airline airplane : agent.getAirplane()){
                    if(airplane.getSerialNo() == serialno){
                        airplane.setSerialNo(Integer.parseInt(sno));
                        airplane.setAirline(air);
                        airplane.setSource(from);
                        airplane.setDestination(to);
                        airplane.setModelNo(mno);
                        airplane.setTotal_seats(Integer.parseInt(maxs));
                        airplane.setWindow(Integer.parseInt(win));
                        airplane.setMiddle(Integer.parseInt(mid));
                        airplane.setAisle(Integer.parseInt(ais));
                        airplane.setWin_cost(Integer.parseInt(winc));
                        airplane.setMid_cost(Integer.parseInt(midc));
                        airplane.setAis_cost(Integer.parseInt(aisc));
                        airplane.setTime(tym);
                    }
                }

                JOptionPane.showMessageDialog(null, "Updated Successfully.");
            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        panel.remove(this);
        CardLayout layout = (CardLayout)panel.getLayout();
        layout.previous(panel);
    }//GEN-LAST:event_cancelActionPerformed

    public void setdata(){
        for(Airline air : agent.getAirplane()){
            if(air.getSerialNo() == serialno){
                airliner.setText(air.getAirline());
                serial_no.setText(Integer.toString(air.getSerialNo()));
                model_no.setText(air.getModelNo());
                source.setText(air.getSource());
                destination.setText(air.getDestination());
                time.setText(air.getTime());
                max.setText(Integer.toString(air.getTotal_seats()));
                window.setText(Integer.toString(air.getWindow()));
                middle.setText(Integer.toString(air.getMiddle()));
                aisle.setText(Integer.toString(air.getAisle()));
                window_cost.setText(Integer.toString(air.getWin_cost()));
                middle_cost.setText(Integer.toString(air.getMid_cost()));
                aisle_cost.setText(Integer.toString(air.getAis_cost()));
            }
        }
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField airliner;
    private javax.swing.JTextField aisle;
    private javax.swing.JTextField aisle_cost;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel dateLabel1;
    private javax.swing.JTextField destination;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField max;
    private javax.swing.JTextField middle;
    private javax.swing.JTextField middle_cost;
    private javax.swing.JTextField model_no;
    private javax.swing.JLabel serialNoLabel;
    private javax.swing.JLabel serialNoLabel1;
    private javax.swing.JLabel serialNoLabel2;
    private javax.swing.JLabel serialNoLabel3;
    private javax.swing.JTextField serial_no;
    private javax.swing.JTextField source;
    private javax.swing.JTextField time;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JButton update;
    private javax.swing.JTextField window;
    private javax.swing.JTextField window_cost;
    // End of variables declaration//GEN-END:variables

    public void visible() {
        update.setVisible(false);
    }

    
}
