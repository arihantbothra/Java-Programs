/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliners;

import Business.Agent;
import Business.Airline;
import Business.Airline_Access;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arihant
 */
public class ViewAirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAirlinearJPanel
     */
    
    JPanel panel;
    Agent agent;
    String data;
    public ViewAirlinerJPanel(JPanel panel, Agent agent) {
        this.agent = agent;
        this.panel = panel;
        initComponents();
    }
    
    public void setData(String air){
        this.data = air;
        airname.setText(data);
        airname.setEditable(false);
    }
    
    public void populate(){
        DefaultTableModel dtm = (DefaultTableModel)viewtable.getModel();
        dtm.setRowCount(0);
        
        for(Airline air : agent.getAirplane())
                {
                    if(air.getAirline().equals(data)){
                     Object row[] = new Object[12];
                        row[0] = air.getSerialNo();
                        row[1] = air.getModelNo();
                        row[2] = air.getSource();
                        row[3] = air.getDestination();
                        row[4] = air.getTime();
                        row[5] = air.getTotal_seats();
                        row[6] = air.getWindow();
                        row[7] = air.getMiddle();
                        row[8] = air.getAisle();
                        row[9] = air.getWin_cost();
                        row[10] = air.getMid_cost();
                        row[11] = air.getAis_cost();
                        dtm.addRow(row);
                    }
                }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewtable = new javax.swing.JTable();
        add = new javax.swing.JButton();
        viewflight = new javax.swing.JButton();
        update = new javax.swing.JButton();
        airname = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        refresh = new javax.swing.JButton();

        viewtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No.", "Model No.", "From", "To", "Time", "Total Seats", "Window", "Middle", "Aisle", "Window Cost", "Middle Cost", "Aisle Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewtable);
        if (viewtable.getColumnModel().getColumnCount() > 0) {
            viewtable.getColumnModel().getColumn(2).setResizable(false);
            viewtable.getColumnModel().getColumn(3).setResizable(false);
            viewtable.getColumnModel().getColumn(4).setResizable(false);
        }

        add.setText("Add Flight>>");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        viewflight.setText("View Flight>>");
        viewflight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewflightActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        cancel.setText("Back");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(airname, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(update)
                                .addGap(18, 18, 18)
                                .addComponent(refresh))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancel)
                                .addGap(20, 20, 20)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewflight))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(airname, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(refresh)
                    .addComponent(add))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(delete)
                    .addComponent(viewflight))
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewflightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewflightActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)viewtable.getModel();    
        try{
        int row = viewtable.getSelectedRow();       
        int serial = (int) viewtable.getModel().getValueAt(row, 0);
        CreateNewAirlinerFlightsJPanel view = new CreateNewAirlinerFlightsJPanel(panel, agent);
        view.setSerial(serial);
        view.setdata();
        view.view();
        panel.add("CreateNewAirlinerJPanel", view);
        CardLayout layout = (CardLayout)panel.getLayout();
        layout.next(panel);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_viewflightActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try{
        DefaultTableModel dtm = (DefaultTableModel)viewtable.getModel();        
        int row = viewtable.getSelectedRow();       
        int serial = (int)viewtable.getModel().getValueAt(row, 0);
        CreateNewAirlinerFlightsJPanel update = new CreateNewAirlinerFlightsJPanel(panel, agent);
        update.setSerial(serial);
        update.setdata();
        panel.add("CreateNewAirlinerJPanel", update);
        CardLayout layout = (CardLayout)panel.getLayout();
        layout.next(panel);
    }catch(Exception e){
    }
    }//GEN-LAST:event_updateActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        panel.remove(this);
        CardLayout layout = (CardLayout)panel.getLayout();
        layout.previous(panel);
    }//GEN-LAST:event_cancelActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        CreateNewAirlinerFlightsJPanel create = new CreateNewAirlinerFlightsJPanel(panel, agent);
        panel.add("CreateNewAirlinerFlightsJPanel", create);
        create.setData(data);
        create.visible();
        CardLayout layout = (CardLayout)panel.getLayout();
        layout.next(panel);
    }//GEN-LAST:event_addActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try{
        int i = 0;
        int row = viewtable.getSelectedRow();        
        int serial = (int) viewtable.getModel().getValueAt(row, 0);
        for(Airline air : agent.getAirplane()){
            if(air.getSerialNo() == serial){
                agent.deletedata(i);
            }
            i++;
            populate();
        }
        
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        populate();
    }//GEN-LAST:event_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField airname;
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refresh;
    private javax.swing.JButton update;
    private javax.swing.JButton viewflight;
    private javax.swing.JTable viewtable;
    // End of variables declaration//GEN-END:variables
}
